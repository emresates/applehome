"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 scene.gltf --transform 
Files: scene.gltf [77.97KB] > scene-transformed.glb [85.34KB] (-9%)
Author: PolygonMBW (https://sketchfab.com/PolygonMBW)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/i-phone-14-pro-max-made-in-blender-93517b947187409fb04e5fe5522b7258
Title: I Phone 14 Pro Max Made in Blender
*/

import React, { useLayoutEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { gsap } from "gsap";
import { useThree } from "@react-three/fiber";

export function Model(props) {
  const { nodes, materials } = useGLTF("/scene-transformed.glb");

  let camera = useThree((state) => state.camera);
  let scene = useThree((state) => state.scene);
  useLayoutEffect(() => {
    let t1 = gsap.timeline({
      scrollTrigger: {
        trigger: "#phoneModel",
        start: "top top",
        end: "bottom+=500 bottom",
        // markers: true,
      },
    });

    t1.fromTo(camera.position, { y: 2 }, { y: 0 });
  }, []);

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_4.geometry}
        material={materials.PaletteMaterial001}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.Object_5.geometry}
        material={materials.PaletteMaterial002}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1}
      />
      <mesh
        geometry={nodes.Object_9.geometry}
        material={materials.Wallpaper}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1}
      />
    </group>
  );
}

useGLTF.preload("/scene-transformed.glb");
